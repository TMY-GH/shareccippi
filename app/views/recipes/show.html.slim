.show-wrapper
  .container
    .top-wrapper
      .name-wrapper
        = @recipe.name
      .like-button id="render_like_form"
        - if user_signed_in?
          = render partial: "like_form", locals: { recipe: @recipe }

    .image-wrapper
      = image_tag @recipe.image

    .details-wrapper
      .minute-wrapper
        span 調理時間
        .info
          span.outline
            = @recipe.minute.time
          span 分
      .serving-wrapper
        span 人数
        .info
          span.outline
            = @recipe.serving.people
          span 人
      .price-wrapper
        - if @recipe.price.present?
          span 値段
          .info
            span.outline
              //全角を半角に
              = @recipe.price.tr('０-９ａ-ｚＡ-Ｚ','0-9a-zA-Z')
            span 円

    - unless @recipe.caution.blank?
      .caution-wrapper
        .caution-heading
          h2 注意書き
        .caution
          = @recipe.caution

    .ingredients-wrapper
      .ingredients-heading
        h2 材料
      .ingredients-container
        ul.ingredients
          - @recipe.ingredients.each do |ingredient|
            li.ingredient
              = ingredient.name
        ul.amounts
          - i = 0
          - @recipe.recipe_ingredients.each do |ingredient|
            li.amount
              //「tr('０-９ａ-ｚＡ-Ｚ','0-9a-zA-Z')」全角を半角に
              = ingredient.amount.tr('０-９ａ-ｚＡ-Ｚ','0-9a-zA-Z')
              // スペースを入れる
              <span> </span>
              // 量に適応した単位をつける
              - if @recipe.ingredients[i].name.include?("g")
                span g
              - elsif @recipe.ingredients[i].name.include?("個")
                span 個
              - elsif @recipe.ingredients[i].name.include?("本")
                span 本
              - elsif @recipe.ingredients[i].name.include?("cc")
                span cc
              - elsif @recipe.ingredients[i].name.include?("枚")
                span 枚
              - elsif @recipe.ingredients[i].name.include?("大さじ")
                span 杯(大さじ)
              - elsif @recipe.ingredients[i].name.include?("小さじ")
                span 杯(小さじ)
              - elsif @recipe.ingredients[i].name.include?("キューブ")
                span キューブ
              - elsif @recipe.ingredients[i].name.include?("パック")
                span パック
              - elsif @recipe.ingredients[i].name.include?("片")
                span 片
              - i += 1

    .cookings-wrapper
      .cookings-heading
        h2 調理方法
      .cookings-container
        ul.cookings
          - @recipe.cookings.each do |cooking|
            li.cooking
              = cooking.content
        ul.cooking-images
          - @recipe.cookings.each do |cooking|
            li.cooking-image
              = image_tag cooking.image

    .buttons-wrapper
      - if user_signed_in? && current_user.id == @recipe.user_id
        .edit-button-wrapper
          = link_to edit_recipe_path(@recipe), class: "edit-button btn" do
            = "編集する"
        .destroy-button-wrapper
          p.destroy-button.btn id="show_destroy_modal" 削除する

    .reviews-wrapper
      .review-heading
        h1 レシピのレビュー
      - if user_signed_in?
        .review-form
          - if current_user.commentable?(@recipe)
            = form_with model: @review, url: recipe_reviews_path(@recipe) do |f|
              = f.text_area :comment, row: "2", placeholder: "コメントを入力する"
              .difficulty-title 調理難易度選択：
              = f.select :difficulty, [['かんたん', 1], ['ふつう', 2], ['むずかしい', 3]]
              = f.submit "送信", class: "submit"
      - if @reviews.exists?
        ul.comments-wrapper
          - @reviews.each do |review|
            li.review
              p.difficulty 
                | レビュー難易度：
                - review.difficulty.times do
                  <i class="fas fa-carrot"></i>
              p.user 
                | 投稿者：
                = "#{review.user.nick_name}さん"
              - if user_signed_in? && review.user.id == current_user.id
                = link_to "削除する", recipe_review_path(@recipe, review.id), method: :delete, class: "review-destroy"
              - if review.comment
                .comment
                  = review.comment
              - else
                .comment
                  = "コメントはありません"

= render partial: "destroy", locals: { recipe: @recipe }